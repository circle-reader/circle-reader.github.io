(()=>{"use strict";function t(t,e){return Object.prototype.toString.call(t)===`[object ${e}]`}function e(e){return t(e,"Undefined")}function n(t=location.href){if(/circle=/.test(t)){const[e,n=""]=t.split("#");if(!n)return t;const{hashs:o}=function(t,e,n=location.hash.substring(1).split("&")){let o=[];if(n.join("").length<=0)return{hashs:[],hash:o};const r=Array.isArray(t)?t:[t],s=n.filter((t=>{if(r.findIndex((e=>t.indexOf(e)>=0))<0)return!0;o.push(t)}));if(e){const n=`${t}=${e}`;s.push(n),o=[],o.push(n)}return{hashs:s,hash:o}}(["circle","widget"],void 0,n.split("&"));return`${e}${o.length>0?"#"+o.join("&"):""}`}return t}function o(t,e){if(!t)return;let n=0;if(t.forEach){const o=t.length;if(o<=0)return;for(;n<o&&!e(t[n],n);)n++}else{const o=Object.keys(t),r=o.length;if(r<=0)return;for(;n<r&&!e(t[o[n]],o[n]);)n++}}window.definePlugin("rule",(function(t){let r=[],s=null;return{onManualDone(o,r){e(r.host)&&(r.host=location.hostname),o.set(r.id||n(),r,"node").then((()=>{o.fire("toolbar_state",`${t.id}_remove`,"active")}))},onRemoveAfter(o,r){const i=s||{},c=i.exclude||[];!c.includes(r)&&c.push(r),i.exclude=c,e(i.host)&&(i.host=location.hostname),o.set(i.id||n(),i,"node").then((()=>{o.fire("toolbar_state",`${t.id}_remove`,"active")}))},onRenderPage(t,e){const n=(s||{}).exclude||[];if(n.length<=0)return;const r=[];n.forEach((t=>{let n;const s=t.startsWith("#container")?t.replace("#container > div:nth-child(1) > ",""):t;try{n=e.querySelector(s)}catch(t){}var i;(i=n)&&i.nodeType&&1===i.nodeType&&r.push(n),r.length>0&&o(r,(t=>{t.classList.add("noise")}))}))},onRuleRemove(e){e.remove(s&&s.id?s.id:n(),"node").then((()=>{s=null,e.fire("toolbar_state",`${t.id}_remove`,"inactive"),e.success("done")})).catch((t=>{e.error(t&&t.message?t.message:t)}))},onToolbarDone(e){s&&e.fire("toolbar_state",`${t.id}_remove`,"active")},filterRule(t,e){const n={};return s&&o(s,((t,e)=>{["id","changed","type","host"].includes(e)||(n[e]=t)})),Object.keys(n).length>0?n:e},onParseByClick(t,e){const n=e.url;if(!n)return;const o=function(t){let e;try{e=new URL(/.*?:\/\//.test(t)?t:`http://${t}`)}catch(n){e={hash:"",href:t,host:"--",hostname:"--"}}return e}(n);t.list({match:{host:o.hostname}},{start:1,limit:30},"node").then((e=>{s=t.match(e.data,o.href)}))},onParseAgainBefore(t){s=t.match(r)},start:t=>t.list({match:{host:location.hostname}},{start:1,limit:30},"node").then((e=>(r=e.data,s=t.match(r),Promise.resolve())))}}))})();